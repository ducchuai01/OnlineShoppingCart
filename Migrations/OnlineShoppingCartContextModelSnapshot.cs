// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineShoppingCart.Models.BusinessModels;

namespace OnlineShoppingCart.Migrations
{
    [DbContext(typeof(OnlineShoppingCartContext))]
    partial class OnlineShoppingCartContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OnlineShoppingCart.Models.Administrative_regions", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("code_name_en")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("name_en")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("id");

                    b.ToTable("Administrative_regions");
                });

            modelBuilder.Entity("OnlineShoppingCart.Models.Administrative_units", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("code_name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("code_name_en")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("full_name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("full_name_en")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("short_name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("short_name_en")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("id");

                    b.ToTable("Administrative_units");
                });

            modelBuilder.Entity("OnlineShoppingCart.Models.Categories", b =>
                {
                    b.Property<string>("CategoryID")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripton")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("OnlineShoppingCart.Models.Discounts", b =>
                {
                    b.Property<int>("DiscountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Delete_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DiscountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("DiscountPercent")
                        .HasColumnType("int");

                    b.HasKey("DiscountID");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("OnlineShoppingCart.Models.Districts", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("Administrative_Unitsid")
                        .HasColumnType("int");

                    b.Property<string>("Provincescode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("administrative_unit_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("code_name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("full_name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("full_name_en")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("name_en")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("province_code")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(20);

                    b.HasKey("code");

                    b.HasIndex("Administrative_Unitsid");

                    b.HasIndex("Provincescode");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("OnlineShoppingCart.Models.FeedBacks", b =>
                {
                    b.Property<int>("FeedBackID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSend")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("ntext");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsersUserID")
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("FeedBackID");

                    b.HasIndex("UsersUserID");

                    b.ToTable("FeedBacks");
                });

            modelBuilder.Entity("OnlineShoppingCart.Models.Products", b =>
                {
                    b.Property<string>("ProductID")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("CategoriesCategoryID")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("CategoryID")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiscountID")
                        .HasColumnType("int");

                    b.Property<int?>("DiscountsDiscountID")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("RelatedImages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("ProductID");

                    b.HasIndex("CategoriesCategoryID");

                    b.HasIndex("DiscountsDiscountID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("OnlineShoppingCart.Models.Provinces", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("Administrative_Regionsid")
                        .HasColumnType("int");

                    b.Property<int?>("Administrative_Unitsid")
                        .HasColumnType("int");

                    b.Property<string>("administrative_region_id")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("administrative_unit_id")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("code_name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("full_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("full_name_en")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("name_en")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("code");

                    b.HasIndex("Administrative_Regionsid");

                    b.HasIndex("Administrative_Unitsid");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("OnlineShoppingCart.Models.Users", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Provincescode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("provinces_code")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.HasIndex("Provincescode");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OnlineShoppingCart.Models.Wards", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("Administrative_Unitsid")
                        .HasColumnType("int");

                    b.Property<string>("Districtscode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("administrative_unit_id")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("code_name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("district_code")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("full_name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("full_name_en")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("name_en")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("code");

                    b.HasIndex("Administrative_Unitsid");

                    b.HasIndex("Districtscode");

                    b.ToTable("Wards");
                });

            modelBuilder.Entity("OnlineShoppingCart.Models.Districts", b =>
                {
                    b.HasOne("OnlineShoppingCart.Models.Administrative_units", "Administrative_Units")
                        .WithMany("Districts")
                        .HasForeignKey("Administrative_Unitsid");

                    b.HasOne("OnlineShoppingCart.Models.Provinces", "Provinces")
                        .WithMany("Districts")
                        .HasForeignKey("Provincescode");
                });

            modelBuilder.Entity("OnlineShoppingCart.Models.FeedBacks", b =>
                {
                    b.HasOne("OnlineShoppingCart.Models.Users", "Users")
                        .WithMany("FeedBack")
                        .HasForeignKey("UsersUserID");
                });

            modelBuilder.Entity("OnlineShoppingCart.Models.Products", b =>
                {
                    b.HasOne("OnlineShoppingCart.Models.Categories", "Categories")
                        .WithMany("Products")
                        .HasForeignKey("CategoriesCategoryID");

                    b.HasOne("OnlineShoppingCart.Models.Discounts", "Discounts")
                        .WithMany("Products")
                        .HasForeignKey("DiscountsDiscountID");
                });

            modelBuilder.Entity("OnlineShoppingCart.Models.Provinces", b =>
                {
                    b.HasOne("OnlineShoppingCart.Models.Administrative_regions", "Administrative_Regions")
                        .WithMany("Provinces")
                        .HasForeignKey("Administrative_Regionsid");

                    b.HasOne("OnlineShoppingCart.Models.Administrative_units", "Administrative_Units")
                        .WithMany("Provinces")
                        .HasForeignKey("Administrative_Unitsid");
                });

            modelBuilder.Entity("OnlineShoppingCart.Models.Users", b =>
                {
                    b.HasOne("OnlineShoppingCart.Models.Provinces", "Provinces")
                        .WithMany("Users")
                        .HasForeignKey("Provincescode");
                });

            modelBuilder.Entity("OnlineShoppingCart.Models.Wards", b =>
                {
                    b.HasOne("OnlineShoppingCart.Models.Administrative_units", "Administrative_Units")
                        .WithMany("Wards")
                        .HasForeignKey("Administrative_Unitsid");

                    b.HasOne("OnlineShoppingCart.Models.Districts", "Districts")
                        .WithMany("Wards")
                        .HasForeignKey("Districtscode");
                });
#pragma warning restore 612, 618
        }
    }
}
